{{> layout/header}}

<input type="hidden" id="boardId" value="{{model.id}}">

<div class="container p-5">

    <!-- 수정삭제버튼 -->
    {{#model.isOwner}}
        <div class="d-flex justify-content-end">
            <a href="/board/{{model.id}}/update-form" class="btn btn-warning me-1">수정</a>
            <form action="/board/{{model.id}}/delete" method="post">
                <button class="btn btn-danger">삭제</button>
            </form>
        </div>
    {{/model.isOwner}}

    <div class="d-flex justify-content-end">
        <b>작성자</b> : {{model.username}}
    </div>

    <!-- 게시글내용 -->
    <div>
        <h2><b>{{model.title}}</b></h2>
        <hr/>
        <div class="m-4 p-2">
            {{model.content}}
        </div>
    </div>

    <!-- AJAX 좋아요 영역 -->
    <div class="my-3 d-flex align-items-center">
        {{#model.isLove}}
            <i id="loveIcon" class="fa fa-heart" style="font-size:20px; color:red"
               onclick="deleteLove({{model.loveId}})"></i>
        {{/model.isLove}}
        {{^model.isLove}}
            <i id="loveIcon" class=" fa fa-heart" style="font-size:20px; color:black"
               onclick="saveLove()"></i>
        {{/model.isLove}}
        <span class="ms-1"><b id="loveCount">{{model.loveCount}}</b>명이 이 글을 좋아합니다</span>
    </div>

    <!-- 댓글 -->
    <div class="card mt-3">
        <!-- 댓글등록 -->
        <div class="card-body">
            <form action="/reply/save" method="post">
                <input type="hidden" name="boardId" value="{{model.id}}">
                <textarea class="form-control" rows="2" name="content"></textarea>
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-outline-primary mt-1">댓글등록</button>
                </div>
            </form>
        </div>

        <!-- 댓글목록 -->
        <div class="card-footer">
            <b>댓글리스트</b>
        </div>
        <div class="list-group">
            <!-- 댓글아이템 -->
            {{#model.replies}}
                <div class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex">
                        <div class="px-1 me-1 bg-primary text-white rounded">{{username}}</div>
                        <div>{{content}}</div>
                    </div>
                    {{#isOwner}}
                        <form action="/reply/{{id}}/delete" method="post">
                            <button class="btn">🗑</button>
                        </form>
                    {{/isOwner}}
                </div>
            {{/model.replies}}
        </div>
    </div>
</div>

<script>
    let boardId = document.querySelector("#boardId").value;

    // setInterval(() => {
    //     location.reload();
    // }, 1000) // 주기적으로 request를 보냄 polling
    // //polling 서버에 간혈적으로 요청하는 것
    // // 상태를 주기적으로 검사하는 것.

    // input은 전역변수로 당기는게 좋음
    async function saveLove() {
        // let boardId = document.querySelector("#likeIcon").dataset.boardId; // dataset에 뒤에 있는건(하이픈으로 뒤에잇는거) .으로 찾으면 됨// data set 은 함수안에 넣어야 함
        let requestBody = {boardId: boardId};
        let response = await fetch(`/love`, {
            method: "POST",
            body: JSON.stringify(requestBody),
            headers: {"Content-Type": "application/json"}
        });
        let responseBody = await response.json(); // { loveId, loveCount }

        // DOM 업데이트
        let loveIcon = document.querySelector('#loveIcon');
        let loveCount = document.querySelector('#loveCount');
        loveIcon.style.color = 'red';
        loveIcon.setAttribute('onclick', `deleteLove(${responseBody.body.loveId})`); // `deleteLove(${responseBody.loveId})`에서 ${responseBody.loveId} 삭제해도 됨 왜?? -> 이제 dataset으로 넘기면 됨
        loveCount.innerHTML = responseBody.body.loveCount;
    }

    async function deleteLove(loveId) {
        // let loveId = document.querySelector("#likeIcon").dataset.loveId;
        let response = await fetch(`/love/${loveId}`, {
            method: "DELETE"
        });
        let responseBody = await response.json(); // { loveCount } // response.text();

        // DOM 업데이트
        let loveIcon = document.querySelector('#loveIcon');
        let loveCount = document.querySelector('#loveCount');
        loveIcon.style.color = 'black';
        // 방법 1. 매개변수로 boardId 받기 방법 2. delete하고 통신할 때 받는거 3. 전역변수(worst)
        // boardId는 안바뀌니까 그냥 input으로 넘기는게 좋을듯
        loveIcon.setAttribute('onclick', `saveLove()`);
        loveCount.innerHTML = responseBody.body.loveCount;
    }
</script>
{{> layout/footer}}